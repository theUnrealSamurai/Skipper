[{"text": "hey what's up guys my name is the", "start": 0.0, "duration": 4.23}, {"text": "churner welcome back to my c++ series", "start": 1.56, "duration": 4.71}, {"text": "today we'll be talking all about how you", "start": 4.23, "duration": 5.22}, {"text": "can store any kind of data in a single", "start": 6.27, "duration": 5.61}, {"text": "variable in c++ a lot of you are", "start": 9.45, "duration": 4.05}, {"text": "probably thinking well yeah you can do", "start": 11.88, "duration": 3.629}, {"text": "that with a void pointer and yes that's", "start": 13.5, "duration": 4.109}, {"text": "true and I'll have a video about void", "start": 15.509, "duration": 3.6}, {"text": "pointers coming soon in the future", "start": 17.609, "duration": 2.881}, {"text": "however this is a much of a better way", "start": 19.109, "duration": 3.811}, {"text": "it's a safer way and it's a supercilious", "start": 20.49, "duration": 5.34}, {"text": "17 brand new way of doing things I've", "start": 22.92, "duration": 4.89}, {"text": "had this kind of miniseries lately on", "start": 25.83, "duration": 3.99}, {"text": "how we can store different types of data", "start": 27.81, "duration": 3.75}, {"text": "and single variables in C++ there's", "start": 29.82, "duration": 3.6}, {"text": "something called S City optional S City", "start": 31.56, "duration": 3.179}, {"text": "variants and now we're going to be", "start": 33.42, "duration": 3.299}, {"text": "talking about S City any and I've", "start": 34.739, "duration": 3.451}, {"text": "already made videos about the other two", "start": 36.719, "duration": 2.701}, {"text": "so if you haven't seen the video about", "start": 38.19, "duration": 3.75}, {"text": "optional data or the video about how we", "start": 39.42, "duration": 4.59}, {"text": "can store multiple variables multiple", "start": 41.94, "duration": 4.139}, {"text": "data types in a single variable then", "start": 44.01, "duration": 3.69}, {"text": "check out those videos they'll be linked", "start": 46.079, "duration": 3.57}, {"text": "up there so now we're kind of here at", "start": 47.7, "duration": 3.96}, {"text": "the end we're up to the point where", "start": 49.649, "duration": 6.241}, {"text": "using STD any we can store anything and", "start": 51.66, "duration": 6.149}, {"text": "I think that the bigger question here is", "start": 55.89, "duration": 4.14}, {"text": "not how do I use STD any I think that's", "start": 57.809, "duration": 3.66}, {"text": "pretty straightforward as we'll see in a", "start": 60.03, "duration": 4.769}, {"text": "minute it's why does this exist when do", "start": 61.469, "duration": 5.521}, {"text": "we want to use it and why would we use s", "start": 64.799, "duration": 3.871}, {"text": "UV Eddie instead of something like a", "start": 66.99, "duration": 2.85}, {"text": "city variant", "start": 68.67, "duration": 3.12}, {"text": "all brilliant things that wouldn't be", "start": 69.84, "duration": 3.72}, {"text": "talking about today but first let's talk", "start": 71.79, "duration": 3.719}, {"text": "about our sponsor for today's video", "start": 73.56, "duration": 3.449}, {"text": "Skillshare I'm sure you guys have", "start": 75.509, "duration": 3.661}, {"text": "probably heard of Skillshare before it's", "start": 77.009, "duration": 3.571}, {"text": "an online learning community with", "start": 79.17, "duration": 3.54}, {"text": "thousands of classes covering dozens of", "start": 80.58, "duration": 4.649}, {"text": "creative and entrepreneurial skills with", "start": 82.71, "duration": 4.199}, {"text": "unlimited access to all of these classes", "start": 85.229, "duration": 3.39}, {"text": "so that you can join the ones that are", "start": 86.909, "duration": 3.241}, {"text": "right for you since I'm more of an", "start": 88.619, "duration": 3.451}, {"text": "engineer that an artist I really like", "start": 90.15, "duration": 3.509}, {"text": "all of the creative classes that", "start": 92.07, "duration": 3.089}, {"text": "Skillshare has to offer", "start": 93.659, "duration": 3.691}, {"text": "for example this class is a fantastic", "start": 95.159, "duration": 3.75}, {"text": "reference for whenever I need to make a", "start": 97.35, "duration": 3.87}, {"text": "new logo Skillshare are also one of my", "start": 98.909, "duration": 4.411}, {"text": "go-to references for anytime I need to", "start": 101.22, "duration": 3.899}, {"text": "deal with web stuff because let's be", "start": 103.32, "duration": 3.81}, {"text": "honest I want to spend as little time as", "start": 105.119, "duration": 4.53}, {"text": "possible hunt at and with these small", "start": 107.13, "duration": 4.349}, {"text": "concise videos I can get through this", "start": 109.649, "duration": 4.441}, {"text": "stuff quickly Scotia are offering two", "start": 111.479, "duration": 4.771}, {"text": "months of free membership to anyone who", "start": 114.09, "duration": 3.51}, {"text": "signs up using the link in the", "start": 116.25, "duration": 4.86}, {"text": "description below two months free", "start": 117.6, "duration": 5.519}, {"text": "membership for two months think about", "start": 121.11, "duration": 4.2}, {"text": "how much you could learn in two months", "start": 123.119, "duration": 4.32}, {"text": "so go ahead and check that out and I", "start": 125.31, "duration": 3.39}, {"text": "want to give a huge thank you to skill", "start": 127.439, "duration": 1.871}, {"text": "chef", "start": 128.7, "duration": 2.53}, {"text": "during this video as you guys know I'm", "start": 129.31, "duration": 3.09}, {"text": "quite new to doing this YouTube thing", "start": 131.23, "duration": 2.97}, {"text": "full time and it's amazing companies", "start": 132.4, "duration": 4.71}, {"text": "like that who make this possible anyway", "start": 134.2, "duration": 5.399}, {"text": "see what I did there is that any way", "start": 137.11, "duration": 6.47}, {"text": "because we're talking about SVP any", "start": 139.599, "duration": 3.981}, {"text": "let's just jump into the code so the", "start": 143.7, "duration": 3.25}, {"text": "first thing that we're gonna do is", "start": 146.019, "duration": 2.821}, {"text": "include the header file which is just", "start": 146.95, "duration": 4.2}, {"text": "any just like that also make sure that", "start": 148.84, "duration": 4.32}, {"text": "you are of course compiling this code", "start": 151.15, "duration": 5.25}, {"text": "with C++ 17 because this is a C++ 17", "start": 153.16, "duration": 6.21}, {"text": "only feature it's new in C++ 17 I should", "start": 156.4, "duration": 5.43}, {"text": "say because obviously if using a version", "start": 159.37, "duration": 4.11}, {"text": "newer than that presumably it would", "start": 161.83, "duration": 4.29}, {"text": "still be there unless the committee", "start": 163.48, "duration": 4.259}, {"text": "decided that it was a terrible idea", "start": 166.12, "duration": 4.86}, {"text": "which still convinced it might be and in", "start": 167.739, "duration": 4.771}, {"text": "that case it's gone but let's just", "start": 170.98, "duration": 3.24}, {"text": "pretend that it's gonna be here forever", "start": 172.51, "duration": 3.57}, {"text": "because it might so to use this you", "start": 174.22, "duration": 4.86}, {"text": "simply write s city any it's much like", "start": 176.08, "duration": 5.1}, {"text": "variant except there are no template", "start": 179.08, "duration": 4.32}, {"text": "arguments because of course it's it can", "start": 181.18, "duration": 4.619}, {"text": "store any type then we just will type in", "start": 183.4, "duration": 4.589}, {"text": "a name for our variable call it data you", "start": 185.799, "duration": 4.321}, {"text": "can use something called SUV make any if", "start": 187.989, "duration": 4.051}, {"text": "you want to construct something from", "start": 190.12, "duration": 3.69}, {"text": "here but what we'll do is we'll just", "start": 192.04, "duration": 3.66}, {"text": "kind of keep it empty here and then just", "start": 193.81, "duration": 3.66}, {"text": "set data equal to like two for example", "start": 195.7, "duration": 4.02}, {"text": "and then we can set data equal to a", "start": 197.47, "duration": 6.63}, {"text": "constant star pointer or we can say died", "start": 199.72, "duration": 6.54}, {"text": "or equal to a string in which case we'll", "start": 204.1, "duration": 3.63}, {"text": "just write something like this or we", "start": 206.26, "duration": 2.759}, {"text": "could set it equal to you guys kind of", "start": 207.73, "duration": 2.94}, {"text": "get the point you just set it equal to", "start": 209.019, "duration": 3.481}, {"text": "like absolutely anything because that's", "start": 210.67, "duration": 4.649}, {"text": "what it is any thing if you want to", "start": 212.5, "duration": 4.049}, {"text": "retrieve your data you're gonna have to", "start": 215.319, "duration": 2.7}, {"text": "do a little bit more work you'll have to", "start": 216.549, "duration": 3.451}, {"text": "actually know which type it is and then", "start": 218.019, "duration": 3.87}, {"text": "kind of cast it into that type and you", "start": 220.0, "duration": 4.109}, {"text": "can do that by using s city any cost", "start": 221.889, "duration": 4.771}, {"text": "then you just put in the type that you", "start": 224.109, "duration": 5.401}, {"text": "want to cast to like STD string and then", "start": 226.66, "duration": 5.49}, {"text": "of course the actual any variable goes", "start": 229.51, "duration": 4.8}, {"text": "into the parameter here now this will", "start": 232.15, "duration": 4.29}, {"text": "throw an exception about any cast", "start": 234.31, "duration": 4.829}, {"text": "exception if the data is not of the type", "start": 236.44, "duration": 4.71}, {"text": "that you're trying to cast into so just", "start": 239.139, "duration": 3.961}, {"text": "keep that in mind there's a course for", "start": 241.15, "duration": 4.26}, {"text": "return a string so we can assign it like", "start": 243.1, "duration": 4.949}, {"text": "so now first glance this may seem like", "start": 245.41, "duration": 5.43}, {"text": "it's pretty much the same as STD variant", "start": 248.049, "duration": 4.891}, {"text": "and that's because well it's similar", "start": 250.84, "duration": 4.89}, {"text": "right we can store any type here whereas", "start": 252.94, "duration": 4.769}, {"text": "STD variant requires us to list all of", "start": 255.73, "duration": 4.86}, {"text": "our types but see whilst a lot of people", "start": 257.709, "duration": 5.031}, {"text": "might think that s to be very", "start": 260.59, "duration": 3.799}, {"text": "is worse because you have to list all", "start": 262.74, "duration": 2.73}, {"text": "your types words here you don't have to", "start": 264.389, "duration": 3.631}, {"text": "worry about types at all that's kind of", "start": 265.47, "duration": 4.47}, {"text": "why SUT variant is actually better than", "start": 268.02, "duration": 3.929}, {"text": "SCT anything pretty much anything you", "start": 269.94, "duration": 3.479}, {"text": "need to deal with I'm really getting", "start": 271.949, "duration": 3.211}, {"text": "annoyed with saying the word any all the", "start": 273.419, "duration": 4.201}, {"text": "time the fact that SUV variant requires", "start": 275.16, "duration": 4.379}, {"text": "you to list out all of those types is", "start": 277.62, "duration": 4.62}, {"text": "good that's what makes it type safe for", "start": 279.539, "duration": 4.711}, {"text": "example we might forget to explicitly", "start": 282.24, "duration": 3.66}, {"text": "write the fact that this is a string and", "start": 284.25, "duration": 3.09}, {"text": "we might try and write some code like", "start": 285.9, "duration": 3.18}, {"text": "this this looks perfectly reasonable we", "start": 287.34, "duration": 3.6}, {"text": "set data to two we set data to Cherno", "start": 289.08, "duration": 3.66}, {"text": "which is a string and then we try and", "start": 290.94, "duration": 3.69}, {"text": "get that string out however that's not", "start": 292.74, "duration": 5.25}, {"text": "going to work because well this chatter", "start": 294.63, "duration": 5.58}, {"text": "is not a string is it it's just a", "start": 297.99, "duration": 5.16}, {"text": "constant our pointer whereas if we were", "start": 300.21, "duration": 5.37}, {"text": "using variant in this exact scenario", "start": 303.15, "duration": 4.199}, {"text": "then our code would look something like", "start": 305.58, "duration": 4.41}, {"text": "this we might have int we might have STD", "start": 307.349, "duration": 4.741}, {"text": "string now of course this will work", "start": 309.99, "duration": 4.14}, {"text": "correctly and we'd have to change this", "start": 312.09, "duration": 5.069}, {"text": "to be get maybe get if because this will", "start": 314.13, "duration": 4.56}, {"text": "get implicitly cast into a string cause", "start": 317.159, "duration": 4.561}, {"text": "it has to be either a string or an int", "start": 318.69, "duration": 4.68}, {"text": "so are there any differences between", "start": 321.72, "duration": 4.199}, {"text": "variant and any apart from the fact that", "start": 323.37, "duration": 4.2}, {"text": "variant of course requires you to list", "start": 325.919, "duration": 4.111}, {"text": "out the types well yes it's to do with", "start": 327.57, "duration": 4.74}, {"text": "how they're stored variant is simply a", "start": 330.03, "duration": 4.68}, {"text": "type safe Union what that means is that", "start": 332.31, "duration": 5.849}, {"text": "it stores all of its data in basically a", "start": 334.71, "duration": 5.07}, {"text": "union and again if you guys are not", "start": 338.159, "duration": 3.0}, {"text": "familiar with that there is a video in", "start": 339.78, "duration": 4.439}, {"text": "the top right corner just about unions", "start": 341.159, "duration": 6.421}, {"text": "what does any do well let's take a look", "start": 344.219, "duration": 6.45}, {"text": "if we just go into this header file then", "start": 347.58, "duration": 5.19}, {"text": "we can see all of the code for any a lot", "start": 350.669, "duration": 4.141}, {"text": "of people ask me how does this work how", "start": 352.77, "duration": 4.26}, {"text": "does that work and my answer is just", "start": 354.81, "duration": 3.599}, {"text": "take a look", "start": 357.03, "duration": 3.629}, {"text": "STL is the sanno template library it's", "start": 358.409, "duration": 4.411}, {"text": "implemented in all in header files and", "start": 360.659, "duration": 3.901}, {"text": "you've got all of those files all that", "start": 362.82, "duration": 3.149}, {"text": "source code on your computer so just", "start": 364.56, "duration": 3.27}, {"text": "open them up and try and read it I know", "start": 365.969, "duration": 3.48}, {"text": "it can be hard sometimes because of the", "start": 367.83, "duration": 3.69}, {"text": "way that is written but just take it", "start": 369.449, "duration": 3.631}, {"text": "slowly and you'll be surprised at how", "start": 371.52, "duration": 3.36}, {"text": "much you'll actually understand so", "start": 373.08, "duration": 3.899}, {"text": "looking at this header file we can start", "start": 374.88, "duration": 3.719}, {"text": "to piece together how this actually", "start": 376.979, "duration": 2.37}, {"text": "works", "start": 378.599, "duration": 3.0}, {"text": "we know that storage seems to be the", "start": 379.349, "duration": 4.44}, {"text": "variable that stores well something and", "start": 381.599, "duration": 3.87}, {"text": "you can see that what it is is actually", "start": 383.789, "duration": 3.6}, {"text": "a union let's take a look at what", "start": 385.469, "duration": 4.111}, {"text": "storage T is it's a struct which seems", "start": 387.389, "duration": 4.621}, {"text": "to have a small storage of big storage", "start": 389.58, "duration": 4.589}, {"text": "an aligned Union and if we actually take", "start": 392.01, "duration": 4.11}, {"text": "a look at what big storage T for example", "start": 394.169, "duration": 4.47}, {"text": "is it's a void pointer surrounded by a", "start": 396.12, "duration": 4.95}, {"text": "bunch of padding and small storage is", "start": 398.639, "duration": 5.161}, {"text": "actually just an aligned Union T which", "start": 401.07, "duration": 5.879}, {"text": "digging in even deeper we realize is an", "start": 403.8, "duration": 6.119}, {"text": "aligned union of all of the types so", "start": 406.949, "duration": 5.341}, {"text": "what s it e an e actually does and I", "start": 409.919, "duration": 4.56}, {"text": "think this is quite clever is for small", "start": 412.29, "duration": 4.68}, {"text": "types it just stores them as a union", "start": 414.479, "duration": 4.321}, {"text": "which means that for small types it", "start": 416.97, "duration": 3.63}, {"text": "works in exactly the same way as a", "start": 418.8, "duration": 4.26}, {"text": "variant however if you have a large type", "start": 420.6, "duration": 4.379}, {"text": "that's where it actually takes you into", "start": 423.06, "duration": 4.32}, {"text": "that void pointer big storage and in", "start": 424.979, "duration": 4.291}, {"text": "that case it will actually dynamically", "start": 427.38, "duration": 4.62}, {"text": "allocate memory now dynamically", "start": 429.27, "duration": 4.59}, {"text": "allocating memory is not good for", "start": 432.0, "duration": 3.9}, {"text": "performance so to sum up how this works", "start": 433.86, "duration": 4.32}, {"text": "if you're using a variant or SUV Eddy", "start": 435.9, "duration": 4.53}, {"text": "with small types like integers floats", "start": 438.18, "duration": 4.95}, {"text": "you know maybe like a vector for class", "start": 440.43, "duration": 4.38}, {"text": "or something like that like in a math", "start": 443.13, "duration": 3.9}, {"text": "library you'll be flying I mean they're", "start": 444.81, "duration": 4.29}, {"text": "gonna work in exactly the same way and", "start": 447.03, "duration": 3.6}, {"text": "you can see by looking here at the", "start": 449.1, "duration": 3.629}, {"text": "source code that that small storage", "start": 450.63, "duration": 3.99}, {"text": "which is all the way up here happens to", "start": 452.729, "duration": 3.931}, {"text": "be if we take a look at this align Union", "start": 454.62, "duration": 4.079}, {"text": "and specifically there's any small space", "start": 456.66, "duration": 4.08}, {"text": "size variable you can see that it is", "start": 458.699, "duration": 4.621}, {"text": "around 32 bytes now this may be", "start": 460.74, "duration": 4.739}, {"text": "implementation specific obviously I'm", "start": 463.32, "duration": 5.31}, {"text": "using visual studio with MSB C it's 32", "start": 465.479, "duration": 5.31}, {"text": "bytes so if you have more storage than", "start": 468.63, "duration": 4.409}, {"text": "that at that point SC DNA will", "start": 470.789, "duration": 4.741}, {"text": "dynamically allocate however SCV variant", "start": 473.039, "duration": 4.771}, {"text": "will not so in other words apart from", "start": 475.53, "duration": 4.56}, {"text": "being more typesafe and a little bit", "start": 477.81, "duration": 3.859}, {"text": "more restrictive which is a good thing", "start": 480.09, "duration": 4.049}, {"text": "every variant is also going to perform", "start": 481.669, "duration": 4.601}, {"text": "faster if you happen to deal with larger", "start": 484.139, "duration": 4.291}, {"text": "data or you want to avoid dynamic memory", "start": 486.27, "duration": 3.929}, {"text": "allocation another tip that I can give", "start": 488.43, "duration": 3.84}, {"text": "you for faster performance is to make", "start": 490.199, "duration": 3.72}, {"text": "sure that you don't copy data so you can", "start": 492.27, "duration": 3.24}, {"text": "see that over here with string I am of", "start": 493.919, "duration": 3.841}, {"text": "course copying it if we go back to our", "start": 495.51, "duration": 4.409}, {"text": "sed any way of doing things", "start": 497.76, "duration": 3.39}, {"text": "you need to make sure that you return", "start": 499.919, "duration": 3.271}, {"text": "this by reference and if you do that", "start": 501.15, "duration": 4.079}, {"text": "you'll see it doesn't work natively like", "start": 503.19, "duration": 3.57}, {"text": "this so this is something that actually", "start": 505.229, "duration": 4.051}, {"text": "would have worked with SVG yet with any", "start": 506.76, "duration": 4.17}, {"text": "cost it doesn't make sure that you", "start": 509.28, "duration": 3.689}, {"text": "actually stick the reference into the", "start": 510.93, "duration": 4.32}, {"text": "template argument here if you punt", "start": 512.969, "duration": 4.38}, {"text": "return by reference and that will of", "start": 515.25, "duration": 3.69}, {"text": "course make sure that everything is", "start": 517.349, "duration": 3.841}, {"text": "nicely optimized and you can see that in", "start": 518.94, "duration": 4.38}, {"text": "this actual case obviously make sure", "start": 521.19, "duration": 4.74}, {"text": "that we actually use sed string in our", "start": 523.32, "duration": 4.139}, {"text": "control point in this case we won't", "start": 525.93, "duration": 2.52}, {"text": "actually get any memory", "start": 527.459, "duration": 3.001}, {"text": "allocations apart from the one that will", "start": 528.45, "duration": 3.84}, {"text": "probably come up from string and it's", "start": 530.46, "duration": 3.54}, {"text": "actually very easy to test this you can", "start": 532.29, "duration": 3.93}, {"text": "just replace operator new with one of", "start": 534.0, "duration": 4.53}, {"text": "your own by writing some simple code", "start": 536.22, "duration": 5.76}, {"text": "like this this is not a complete good", "start": 538.53, "duration": 6.3}, {"text": "implementation of the new operator so", "start": 541.98, "duration": 4.98}, {"text": "don't use this in any production code", "start": 544.83, "duration": 3.36}, {"text": "obviously but if we stick a breakpoint", "start": 546.96, "duration": 3.21}, {"text": "in here then we'll now be aware of all", "start": 548.19, "duration": 4.29}, {"text": "memory allocations and if I hit f5 to", "start": 550.17, "duration": 4.35}, {"text": "run this program you'll see that we do", "start": 552.48, "duration": 3.75}, {"text": "get a memory allocation but if we take a", "start": 554.52, "duration": 3.03}, {"text": "look at where it comes from it actually", "start": 556.23, "duration": 3.84}, {"text": "comes from a city string so you can see", "start": 557.55, "duration": 3.93}, {"text": "over here if I make the call stack a", "start": 560.07, "duration": 2.34}, {"text": "little bit bigger", "start": 561.48, "duration": 3.87}, {"text": "we have SCV basic string which then goes", "start": 562.41, "duration": 4.89}, {"text": "into the allocator and if I go back to", "start": 565.35, "duration": 4.56}, {"text": "main and I just step through that code a", "start": 567.3, "duration": 4.23}, {"text": "little bit so we'll go back up here", "start": 569.91, "duration": 4.38}, {"text": "we'll just step out of that and then", "start": 571.53, "duration": 4.38}, {"text": "just go to the next line if we take a", "start": 574.29, "duration": 3.09}, {"text": "look at this call stack a little bit", "start": 575.91, "duration": 3.45}, {"text": "more closely it might actually seem like", "start": 577.38, "duration": 3.78}, {"text": "any is the one doing the allocation", "start": 579.36, "duration": 2.88}, {"text": "because you can see it comes from the", "start": 581.16, "duration": 3.69}, {"text": "assignment operator to any but all any", "start": 582.24, "duration": 4.65}, {"text": "is actually doing is doing a construct", "start": 584.85, "duration": 3.81}, {"text": "in place forwarding all those arguments", "start": 586.89, "duration": 4.29}, {"text": "and it's the basic string you can see", "start": 588.66, "duration": 5.52}, {"text": "that is allocating once again so f5 to", "start": 591.18, "duration": 5.22}, {"text": "continue running this and again we have", "start": 594.18, "duration": 4.23}, {"text": "a basic string and that is all of the", "start": 596.4, "duration": 3.87}, {"text": "allocations from this program so in that", "start": 598.41, "duration": 4.86}, {"text": "case s-u-v any actually did not allocate", "start": 600.27, "duration": 5.37}, {"text": "anything if however we were to have some", "start": 603.27, "duration": 5.46}, {"text": "kind of class that would have more than", "start": 605.64, "duration": 4.98}, {"text": "32 bytes so for example I'll have a", "start": 608.73, "duration": 5.91}, {"text": "struct here of two strings s0 and s1 if", "start": 610.62, "duration": 6.96}, {"text": "I do try and actually set this up over", "start": 614.64, "duration": 5.34}, {"text": "here I'll just use custom class and we", "start": 617.58, "duration": 5.79}, {"text": "will remove this anycast and if I had f5", "start": 619.98, "duration": 5.64}, {"text": "if I skip past this basic string", "start": 623.37, "duration": 3.78}, {"text": "allocation that of course is coming from", "start": 625.62, "duration": 3.33}, {"text": "the member variables of that custom", "start": 627.15, "duration": 3.12}, {"text": "class then you'll see that what we have", "start": 628.95, "duration": 3.84}, {"text": "here is that assignment operator and", "start": 630.27, "duration": 5.67}, {"text": "during the emplacement you can see that", "start": 632.79, "duration": 6.24}, {"text": "this is a big storage operation which of", "start": 635.94, "duration": 5.88}, {"text": "course does actually call new over here", "start": 639.03, "duration": 4.74}, {"text": "so just be aware that sed NE will", "start": 641.82, "duration": 3.93}, {"text": "allocate if it needs to and in this case", "start": 643.77, "duration": 3.3}, {"text": "if the data that you're trying to store", "start": 645.75, "duration": 3.87}, {"text": "is above 32 bytes you can see that it", "start": 647.07, "duration": 4.5}, {"text": "calls new and causes a dynamic memory", "start": 649.62, "duration": 3.87}, {"text": "allocation so back to the question of", "start": 651.57, "duration": 5.01}, {"text": "when to use sed any when should it be", "start": 653.49, "duration": 5.85}, {"text": "used this is a tricky one a lot of", "start": 656.58, "duration": 4.99}, {"text": "people will just flat-out tell you that", "start": 659.34, "duration": 4.75}, {"text": "it's just a bit useless and to be honest", "start": 661.57, "duration": 6.3}, {"text": "I'm kind of inclined to agree when well", "start": 664.09, "duration": 5.91}, {"text": "look what is a good use case for SED", "start": 667.87, "duration": 4.56}, {"text": "Annie if you want to store multiple data", "start": 670.0, "duration": 5.46}, {"text": "types in a single variable use SV", "start": 672.43, "duration": 4.98}, {"text": "variant it's basically a type safe", "start": 675.46, "duration": 4.2}, {"text": "version of STD any meaning that you", "start": 677.41, "duration": 4.35}, {"text": "can't set it to whatever type you please", "start": 679.66, "duration": 5.04}, {"text": "accidentally and also it's not going to", "start": 681.76, "duration": 4.77}, {"text": "dynamically allocate memory so it will", "start": 684.7, "duration": 3.72}, {"text": "perform better if you have the need the", "start": 686.53, "duration": 4.11}, {"text": "requirement to be able to store any data", "start": 688.42, "duration": 6.06}, {"text": "type in a single variable maybe rethink", "start": 690.64, "duration": 6.03}, {"text": "the design of your program I mean I", "start": 694.48, "duration": 5.94}, {"text": "honestly really like kind of think of a", "start": 696.67, "duration": 5.58}, {"text": "valid use case for this I think that", "start": 700.42, "duration": 4.38}, {"text": "it's I think that it's something that", "start": 702.25, "duration": 4.23}, {"text": "you probably should never use I mean if", "start": 704.8, "duration": 3.84}, {"text": "you have like a buffer of data and you", "start": 706.48, "duration": 3.84}, {"text": "have like absolutely no idea what that", "start": 708.64, "duration": 3.03}, {"text": "outer is you just want to you just want", "start": 710.32, "duration": 2.94}, {"text": "to point it to it then that's fine you", "start": 711.67, "duration": 4.23}, {"text": "can use a void pointer for that but this", "start": 713.26, "duration": 4.8}, {"text": "is like this is something completely", "start": 715.9, "duration": 4.92}, {"text": "different if you guys have any good use", "start": 718.06, "duration": 3.99}, {"text": "cases if you guys have used this", "start": 720.82, "duration": 2.88}, {"text": "throughout your code and you think that", "start": 722.05, "duration": 3.36}, {"text": "it's useful please drop a comment below", "start": 723.7, "duration": 3.12}, {"text": "I'd love to read some of those comments", "start": 725.41, "duration": 4.92}, {"text": "and see because as it stands right now I", "start": 726.82, "duration": 5.88}, {"text": "don't think this is anywhere near as", "start": 730.33, "duration": 4.83}, {"text": "useful as optional or variant and it's", "start": 732.7, "duration": 5.49}, {"text": "kind of funny I guess to end to end the", "start": 735.16, "duration": 5.28}, {"text": "series on something like this but that's", "start": 738.19, "duration": 3.9}, {"text": "just the way it is I just think that s", "start": 740.44, "duration": 4.35}, {"text": "it eeny is something that you should", "start": 742.09, "duration": 4.65}, {"text": "definitely be aware of but maybe not", "start": 744.79, "duration": 3.57}, {"text": "something that you should use all that", "start": 746.74, "duration": 3.45}, {"text": "often anyway I hope you guys enjoyed", "start": 748.36, "duration": 3.45}, {"text": "this video if you did you can hit that", "start": 750.19, "duration": 3.54}, {"text": "like button also don't forget to check", "start": 751.81, "duration": 3.72}, {"text": "out the link in description for two", "start": 753.73, "duration": 4.2}, {"text": "months of free Skillshare membership you", "start": 755.53, "duration": 4.26}, {"text": "can also drop a comment below if you", "start": 757.93, "duration": 4.26}, {"text": "want me to cover a specific topic in C++", "start": 759.79, "duration": 4.65}, {"text": "and I will add it to my ever-growing", "start": 762.19, "duration": 4.14}, {"text": "list I will see you guys next time", "start": 764.44, "duration": 4.09}, {"text": "goodbye strong", "start": 766.33, "duration": 26.11}, {"text": "[Music]", "start": 768.53, "duration": 23.91}]