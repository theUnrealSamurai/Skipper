[{"text": "The goal of encryption is to garble data is\nsuch a way so that no one who has the data", "start": 1.31, "duration": 4.65}, {"text": "can read it unless they\u2019re the intended\nrecipient.", "start": 5.96, "duration": 1.919}, {"text": "And the encryption of pretty much all private\ninformation sent over the internet relies", "start": 7.879, "duration": 4.051}, {"text": "immensely on one numerical phenomenon - as\nfar as we can tell, it\u2019s really really hard", "start": 11.93, "duration": 5.03}, {"text": "to take a really big number and find its factors\nusing a normal, non-quantum computer.", "start": 16.96, "duration": 5.5}, {"text": "Unlike multiplication, which is very fast\n(just multiply the digits together and add", "start": 22.46, "duration": 3.79}, {"text": "them up ), finding the prime numbers that\nmultiply together to give you an arbitrary,", "start": 26.25, "duration": 4.189}, {"text": "big, non-prime number appears to be slow - at\nleast, the best approach we currently have", "start": 30.439, "duration": 4.731}, {"text": "that runs on a normal computer - even a very\npowerful one - is very slow.", "start": 35.17, "duration": 4.35}, {"text": "Like, to find the factors of this number , it\ntook 2000 years of computer processor time!", "start": 39.52, "duration": 5.14}, {"text": "Now, it\u2019s not yet proven that we won\u2019t\neventually find a fast way to break encryption", "start": 44.66, "duration": 4.31}, {"text": "just with normal computers, but it\u2019s certain\nthat anybody with a large working quantum", "start": 48.97, "duration": 4.6}, {"text": "computer today would pose an immediate privacy\nand security threat to the whole internet.", "start": 53.57, "duration": 5.18}, {"text": "And that\u2019s due to something called \u201cShor\u2019s\nAlgorithm.\u201d", "start": 58.75, "duration": 2.91}, {"text": "Well actually it\u2019s due to quantum superposition\nand interference; they\u2019re just taken advantage", "start": 61.66, "duration": 3.93}, {"text": "of by an algorithm developed by Peter Shor,\nwhich I\u2019m now going to attempt to explain.", "start": 65.59, "duration": 5.55}, {"text": "The kind of encryption we\u2019re talking about\ngarbles or \u201clocks\u201d messages using a large", "start": 71.14, "duration": 5.259}, {"text": "number in such a way that decrypting or \u201cunlocking\u201d\nthe data requires knowing the factors of that", "start": 76.399, "duration": 4.64}, {"text": "number . If somebody doesn\u2019t have the factors,\neither they can\u2019t decrypt the data, or they", "start": 81.039, "duration": 4.61}, {"text": "have to spend a really really long time or\na huge amount of investment in computing resources", "start": 85.649, "duration": 4.18}, {"text": "finding the factors.", "start": 89.829, "duration": 1.6}, {"text": "Our current best methods essentially just\nguess a number that might be a factor, and", "start": 91.429, "duration": 4.0}, {"text": "check if it is . And if it isn\u2019t, you try\nagain.", "start": 95.429, "duration": 3.491}, {"text": "And again.", "start": 98.92, "duration": 1.1}, {"text": "And again.", "start": 100.02, "duration": 1.0}, {"text": "It\u2019s slow.", "start": 101.02, "duration": 1.389}, {"text": "There are so many numbers to check that even\nthe fast clever ways to make really good guesses", "start": 102.409, "duration": 4.681}, {"text": "are slow.", "start": 107.09, "duration": 1.059}, {"text": "For example, my computer took almost 9 minutes\nto find the prime factors of this number.", "start": 108.149, "duration": 5.301}, {"text": "So if you used this number to encrypt your\ndata, it would only be safe from me for 9", "start": 113.45, "duration": 4.599}, {"text": "minutes.", "start": 118.049, "duration": 1.0}, {"text": "If, on the other hand, you used a number like\nthe one that took 2000 years of computer processor", "start": 119.049, "duration": 3.691}, {"text": "time to factor , your data would definitely\nbe safe from me and my laptop, but not from", "start": 122.74, "duration": 4.19}, {"text": "somebody with access to a server farm .\nThis is similar to how putting a lock on your", "start": 126.93, "duration": 4.079}, {"text": "door and bars on your windows doesn\u2019t guarantee\nyou won\u2019t have stuff stolen from your house,", "start": 131.009, "duration": 4.37}, {"text": "but does make it take more time and more work.", "start": 135.379, "duration": 2.861}, {"text": "Encrypting data isn\u2019t a guarantee of protection\n- it\u2019s a way of making it harder to access;", "start": 138.24, "duration": 4.52}, {"text": "hopefully enough harder that no one thinks\nit\u2019s worth trying.", "start": 142.76, "duration": 3.119}, {"text": "But quantum computation has the potential\nto make it super super easy to access encrypted", "start": 145.879, "duration": 5.081}, {"text": "data - like having a lightsaber you can use\nto cut through any lock or barrier, no matter", "start": 150.96, "duration": 4.33}, {"text": "how strong.", "start": 155.29, "duration": 1.24}, {"text": "Shor\u2019s algorithm is that lightsaber.", "start": 156.53, "duration": 3.19}, {"text": "Roughly speaking, to factor a given number\nShor\u2019s algorithm starts with a random crappy", "start": 159.72, "duration": 3.5}, {"text": "guess that might share a factor with your\ntarget number, (but which probably doesn\u2019t),", "start": 163.22, "duration": 4.17}, {"text": "and then the algorithm transforms it into\na much better guess that probably DOES share", "start": 167.39, "duration": 3.8}, {"text": "a factor!", "start": 171.19, "duration": 1.0}, {"text": "There\u2019s nothing intrinsically quantum mechanical\nabout this - you can, in fact, run a version", "start": 172.19, "duration": 3.92}, {"text": "of Shor\u2019s algorithm on a regular computer\nto factor big numbers, but perhaps unsurprisingly", "start": 176.11, "duration": 4.66}, {"text": "the \u201cturning your bad guess into a better\nguess\u201d part of the process takes a very", "start": 180.77, "duration": 4.07}, {"text": "very long time on a normal computer.", "start": 184.84, "duration": 2.41}, {"text": "On the other hand, this key step happens to\nbe ridiculously fast on quantum computers.", "start": 187.25, "duration": 4.799}, {"text": "So, our task is to explain how Shor\u2019s algorithm\nturns a crappy guess into a better guess (which", "start": 192.049, "duration": 4.991}, {"text": "is purely mathematics), and why quantum computers\nmake that fast (which is where the physics", "start": 197.04, "duration": 4.74}, {"text": "comes in).", "start": 201.78, "duration": 1.0}, {"text": "It all starts with a big number, N, that you\u2019ll\nneed to find the factors of to break into", "start": 202.78, "duration": 4.11}, {"text": "some encrypted data.", "start": 206.89, "duration": 1.319}, {"text": "If you don\u2019t know what the factors are (which\nyou don\u2019t), you can make a guess; just pick", "start": 208.209, "duration": 3.98}, {"text": "some number g that\u2019s less than N . We actually\ndon\u2019t need the guess to be a pure factor", "start": 212.189, "duration": 4.25}, {"text": "of N - it could also be a number that shares\nsome factors with N, like how 4 isn\u2019t a", "start": 216.439, "duration": 3.97}, {"text": "factor of 6, but shares a factor with it.", "start": 220.409, "duration": 2.3}, {"text": "Numbers that share factors are ok because\nthere\u2019s a two-thousand-year-old method to", "start": 222.709, "duration": 3.221}, {"text": "check for and find common factors - it\u2019s\ncalled Euclid\u2019s algorithm and it\u2019s pretty", "start": 225.93, "duration": 4.199}, {"text": "darn efficient.", "start": 230.129, "duration": 1.001}, {"text": "All this is to say that to find a factor of\nN, we don't have to guess a factor of N - guessing", "start": 231.13, "duration": 4.919}, {"text": "numbers that share factors with N works, too,\nthanks to Euclid.", "start": 236.049, "duration": 4.19}, {"text": "And if Euclid\u2019s algorithm found any shared\nfactors with N, then we\u2019d be done!", "start": 240.239, "duration": 4.161}, {"text": "You could just divide N by that factor to\nget the other factor and break the encryption.", "start": 244.4, "duration": 4.41}, {"text": "But for the big numbers used in encryption,\nit\u2019s astronomically unlikely that any single", "start": 248.81, "duration": 4.629}, {"text": "guess will actually share a factor with N.", "start": 253.439, "duration": 2.091}, {"text": "Instead, we\u2019ll use a trick to help transform\nyour crappy guess into a pair of guesses that", "start": 255.53, "duration": 4.84}, {"text": "are way more likely to share factors with\nN. The trick is based on a simple mathematical", "start": 260.37, "duration": 4.93}, {"text": "fact: for any pair of whole numbers that don\u2019t\nshare a factor, if you multiply one of them", "start": 265.3, "duration": 4.69}, {"text": "by itself enough times, you\u2019ll eventually\narrive at some whole number multiple of the", "start": 269.99, "duration": 4.061}, {"text": "other number, plus 1 . That is, if a and b\nare integers that don\u2019t share factors, then", "start": 274.051, "duration": 5.759}, {"text": "eventually a^p will be equal to m times b\n+ 1, for some power p and some multiple m", "start": 279.81, "duration": 7.37}, {"text": ". We don't have the time to get into why this\nis true, but hopefully a few illustrations", "start": 287.18, "duration": 4.049}, {"text": "can at least give you a feeling for it.", "start": 291.229, "duration": 1.801}, {"text": "For example, 7 and 15.", "start": 293.03, "duration": 2.11}, {"text": "While seven squared isn\u2019t one more than\na multiple of 15, and neither is seven cubed,", "start": 295.14, "duration": 4.499}, {"text": "seven to the fourth is.", "start": 299.639, "duration": 1.851}, {"text": "Or take 42 and 13 - 42 squared isn\u2019t one\nmore than a multiple of 13 , but 42 cubed", "start": 301.49, "duration": 5.73}, {"text": "is.", "start": 307.22, "duration": 1.0}, {"text": "This same kind of thing works for any pair\nof numbers that don't share factors, though", "start": 308.22, "duration": 3.02}, {"text": "the power p might be ridiculously large.", "start": 311.24, "duration": 1.0}, {"text": "So, for the big number, N, and your crappy\nguess, g, we\u2019re guaranteed that some power", "start": 312.24, "duration": 4.54}, {"text": "of g is equal to some multiple of N, plus\n1 . And here\u2019s the clever part - if we rearrange", "start": 316.78, "duration": 5.78}, {"text": "this equation by subtracting the 1 from both\nsides, we can rewrite g^p-1 as (g^p/2 + 1)(g^p/2", "start": 322.56, "duration": 9.39}, {"text": "- 1) . You can multiply that back together\nto convince yourself that it works.", "start": 331.95, "duration": 4.38}, {"text": "And now we have an equation that almost looks\nlike \u201csomething\u201d times \u201csomething\u201d", "start": 336.33, "duration": 3.93}, {"text": "is equal to N, which is exactly what we\u2019re\ntrying to find - factors of N!", "start": 340.26, "duration": 4.71}, {"text": "These two terms are precisely the new and\nimproved guesses that Shor\u2019s algorithm prescribes:", "start": 344.97, "duration": 5.379}, {"text": "take the initial crappy guess, multiply it\nby itself p/2 times, and either add or subtract", "start": 350.349, "duration": 5.731}, {"text": "one!", "start": 356.08, "duration": 1.0}, {"text": "Of course, since we\u2019re dealing with a multiple\nof N rather than N itself, the terms on the", "start": 357.08, "duration": 3.44}, {"text": "left hand side might be multiples of factors\nof N, rather than the factors themselves.", "start": 360.52, "duration": 4.609}, {"text": "Like how 7^4/2+1 = 50, and 7^4/2-1 = 48, neither\nof which is a factor of 15.", "start": 365.129, "duration": 9.561}, {"text": "But we can find shared factors by using Euclid\u2019s\nalgorithm again, and once we do, we\u2019ll have", "start": 374.69, "duration": 4.949}, {"text": "broken the encryption!", "start": 379.639, "duration": 1.601}, {"text": "So is this all Shor\u2019s algorithm is?", "start": 381.24, "duration": 2.12}, {"text": "Where\u2019s the quantum mechanics?", "start": 383.36, "duration": 1.0}, {"text": "Why can\u2019t we use this to break encryption\nright now?", "start": 384.36, "duration": 2.25}, {"text": "Well, indeed, there are three problems with\nthese new and improved guesses.", "start": 386.61, "duration": 5.559}, {"text": "First, one of the new guesses might itself\nbe a multiple of N, in which case the other", "start": 392.169, "duration": 3.991}, {"text": "would be a factor of m and neither would be\nuseful to us in any way.", "start": 396.16, "duration": 4.129}, {"text": "And second, the power \u201cp\u201d might be an\nodd number , in which case p/2 isn\u2019t a whole", "start": 400.289, "duration": 5.061}, {"text": "number and so our guess taken to the power\nof p/2 probably isn\u2019t a whole number either,", "start": 405.35, "duration": 4.319}, {"text": "which is no good.", "start": 409.669, "duration": 1.741}, {"text": "However, for a random starting guess, it turns\nout that at least 3/8ths of the time neither", "start": 411.41, "duration": 5.2}, {"text": "of these problems happens and p does generate\nguesses that share factors with N and break", "start": 416.61, "duration": 6.309}, {"text": "the encryption!", "start": 422.919, "duration": 1.351}, {"text": "This is worth repeating - for ANY initial\nguess that we make, at least 37.5% of the", "start": 424.27, "duration": 5.149}, {"text": "time g^p/2 \u00b11 will lead to a factor of N,\ndecrypting the garbled message.", "start": 429.419, "duration": 6.81}, {"text": "Which means we\u2019re 99% likely to break the\nencryption with fewer than 10 guesses.", "start": 436.229, "duration": 4.781}, {"text": "However, problem number three is the big one.", "start": 441.01, "duration": 2.74}, {"text": "Remember, to turn a crappy guess into a good\nguess we need to know how many times you have", "start": 443.75, "duration": 4.401}, {"text": "to multiply our guess by itself before we\nget a multiple of N, plus 1.", "start": 448.151, "duration": 4.229}, {"text": "And for a normal computer, the act of finding\nthat power p takes a ton of work and time.", "start": 452.38, "duration": 4.939}, {"text": "It\u2019s not hard for small numbers like 42\nand 13, but if our big number is a thousand", "start": 457.319, "duration": 4.461}, {"text": "digits long, and our crappy guess is 500 digits\nlong, then trying to figure out how many times", "start": 461.78, "duration": 5.109}, {"text": "you have to multiply our guess by itself before\nyou get some multiple of the big number, plus", "start": 466.889, "duration": 3.65}, {"text": "one, takes a ridiculous amount of trial and\nerror on a normal computer - more effort than", "start": 470.539, "duration": 4.291}, {"text": "it would have taken to just factor N by brute\nforce in the first place!", "start": 474.83, "duration": 3.709}, {"text": "So finally, this is where quantum mechanics\ncomes in and speeds things up an INSANE amount.", "start": 478.539, "duration": 5.941}, {"text": "Unlike a normal computation which gives only\none answer for a given input, a quantum computation", "start": 484.48, "duration": 4.69}, {"text": "can simultaneously calculate a bunch of possible\nanswers for a single input by using a quantum", "start": 489.17, "duration": 4.809}, {"text": "superposition - but you only get one of the\nanswers out at the end, randomly, with different", "start": 493.979, "duration": 4.66}, {"text": "probabilities for each one.", "start": 498.639, "duration": 1.59}, {"text": "The key behind fast quantum computations is\nto set up a quantum superposition that calculates", "start": 500.229, "duration": 5.34}, {"text": "all possible answers at once while being cleverly\narranged so that all of the wrong answers", "start": 505.569, "duration": 4.41}, {"text": "destructively interfere with each other.", "start": 509.979, "duration": 1.881}, {"text": "That way when you actually measure the output\nof the calculation, the result of your measurement", "start": 511.86, "duration": 3.58}, {"text": "is most likely the right answer.", "start": 515.44, "duration": 2.08}, {"text": "In general it can be really hard to figure\nout how to put any particular problem into", "start": 517.52, "duration": 3.42}, {"text": "a quantum form where all the wrong answers\ndestructively interfere, but that\u2019s what", "start": 520.94, "duration": 4.03}, {"text": "Shor\u2019s algorithm does for the problem of\nfactoring large numbers - well, actually,", "start": 524.97, "duration": 3.88}, {"text": "it does it for the problem of finding the\npower \u201cp\u201d.", "start": 528.85, "duration": 2.12}, {"text": "Remember, at this point we've made a crappy\nguess g, and we're trying to find the power", "start": 530.97, "duration": 4.67}, {"text": "p so that g to the p is one more than a multiple\nof N. A p that does that also means that g^p/2", "start": 535.64, "duration": 7.4}, {"text": "\u00b11 is very likely to share factors with N.", "start": 543.04, "duration": 4.84}, {"text": "So to begin the quantum computation, we need\nto set up a quantum mechanical computer that", "start": 547.88, "duration": 3.699}, {"text": "takes a number x as input, and raises our\nguess to the power of x.", "start": 551.579, "duration": 3.911}, {"text": "For reasons we'll see later, we need to keep\ntrack of both the number x, and our guess", "start": 555.49, "duration": 4.49}, {"text": "to that power.", "start": 559.98, "duration": 1.0}, {"text": "The computer then needs to take that result\nand calculate how much bigger than a multiple", "start": 560.98, "duration": 3.76}, {"text": "of N it is.", "start": 564.74, "duration": 1.0}, {"text": "We'll call that the \"remainder\", and we'll\nwrite it as plus \u201csomething\" for whatever", "start": 565.74, "duration": 3.55}, {"text": "something the remainder is (remember, we want\na remainder of 1).", "start": 569.29, "duration": 4.0}, {"text": "So far, no different from a normal computer.", "start": 573.29, "duration": 2.32}, {"text": "But since it\u2019s a quantum computer, we can\nsend in a superposition of numbers and the", "start": 575.61, "duration": 3.599}, {"text": "computation will be done simultaneously on\nall of them, first resulting in a superposition", "start": 579.209, "duration": 4.201}, {"text": "for each p of all possible powers our guess\ncould be raised to , and then a superposition", "start": 583.41, "duration": 3.7}, {"text": "for each p of how much bigger each of those\npowers are than a multiple of N.", "start": 587.11, "duration": 3.5}, {"text": "We can\u2019t just measure this superposition\nto get the answer - if we did, we\u2019d get", "start": 590.61, "duration": 3.63}, {"text": "a single random element of the superposition\nas output, like \u201cour guess squared is 5", "start": 594.24, "duration": 4.5}, {"text": "more than a multiple of N\u201d . Which is no\nbetter than just randomly guessing powers,", "start": 598.74, "duration": 3.969}, {"text": "which we can do with a normal computer.", "start": 602.709, "duration": 1.631}, {"text": "No, we need to do something clever to get\nall the non-p answers to destructively interfere", "start": 604.34, "duration": 5.17}, {"text": "and cancel out, leaving us with only one possible\nanswer: p.", "start": 609.51, "duration": 4.44}, {"text": "Which it turns out we can do, based on another\nmathematical observation.", "start": 613.95, "duration": 3.97}, {"text": "This mathematical observation isn\u2019t particularly\ncomplicated, but it is a tad subtle and it", "start": 617.92, "duration": 4.09}, {"text": "may not be immediately clear why we care.", "start": 622.01, "duration": 2.55}, {"text": "However, it\u2019s the key idea that allows us\nto turn the problem of finding p into one", "start": 624.56, "duration": 4.76}, {"text": "that works well on a quantum computer, and\nso in some ways it\u2019s the crux of Shor\u2019s", "start": 629.32, "duration": 3.62}, {"text": "algorithm - which is to say, it\u2019s worth\nthe effort!", "start": 632.94, "duration": 2.73}, {"text": "Ok, so remember that IF we knew what p was,\nwe could raise our guess to that power and", "start": 635.67, "duration": 4.53}, {"text": "get one more than a multiple of N. On the\nother hand, if we take our guess to a random", "start": 640.2, "duration": 3.85}, {"text": "power , it\u2019s probably going to be some other\nnumber more than a multiple of N - say, 3", "start": 644.05, "duration": 4.44}, {"text": "more . But check this out - if we raise our\nguess to that random power plus p, it\u2019s", "start": 648.49, "duration": 4.909}, {"text": "again 3 more than a multiple of N . If we\nraise our guess to that random power plus", "start": 653.399, "duration": 3.861}, {"text": "2 p, it\u2019s again 3 more than a multiple of\nN. And so on.", "start": 657.26, "duration": 4.51}, {"text": "It\u2019s pretty straightforward to show why\nthis works by multiplying out \u201csomething", "start": 661.77, "duration": 3.379}, {"text": "times N plus 1\u201d with \u201csomething else times\nN plus 3\u201d; you get \u201ca different something", "start": 665.149, "duration": 4.81}, {"text": "times N, again plus 3\u201d . And this works\nfor any power x - if g^x is r more than a", "start": 669.959, "duration": 5.761}, {"text": "multiple of N, then g^(x+p) will also be r\nmore than a multiple of N (though a different", "start": 675.72, "duration": 5.82}, {"text": "multiple).", "start": 681.54, "duration": 1.0}, {"text": "So the power p that we\u2019re looking for - the\none that allows us to improve our crappy guess", "start": 682.54, "duration": 3.5}, {"text": "and find factors of N and break encryption\n- it has a repeating property where if we", "start": 686.04, "duration": 4.03}, {"text": "take another power and add (or subtract) p\nto it, the amount more than a multiple of", "start": 690.07, "duration": 4.38}, {"text": "N stays the same.", "start": 694.45, "duration": 1.65}, {"text": "This repeating property isn\u2019t something\nyou could figure out from taking our guess", "start": 696.1, "duration": 3.239}, {"text": "to just one power - it\u2019s a structural relationship\nbetween different powers, and we can take", "start": 699.339, "duration": 4.461}, {"text": "advantage of it since quantum computations\ncan be performed on superpositions of different", "start": 703.8, "duration": 4.05}, {"text": "possible powers.", "start": 707.85, "duration": 1.109}, {"text": "Specifically, if we take the superposition\nof all possible powers and JUST measure the", "start": 708.959, "duration": 4.391}, {"text": "\u201camount more than a multiple of N\u201c part,\nthen we\u2019ll randomly get one of the possible", "start": 713.35, "duration": 4.31}, {"text": "\u201camounts more than a multiple of N\u201d as\nthe output - say, 3.", "start": 717.66, "duration": 3.6}, {"text": "The specific number doesn\u2019t matter to us,\nbut what does matter is that this means we", "start": 721.26, "duration": 3.269}, {"text": "must be left with a superposition of purely\nthe powers that could have resulted in a remainder", "start": 724.529, "duration": 4.49}, {"text": "of 3.", "start": 729.019, "duration": 1.0}, {"text": "This is one of the special properties of quantum\ncomputation - if you put in a superposition", "start": 730.019, "duration": 4.141}, {"text": "and get an answer that could have come from\nmore than one element of the superposition,", "start": 734.16, "duration": 3.549}, {"text": "then you'll be left with a superposition of\njust those elements!", "start": 737.709, "duration": 3.111}, {"text": "And in our case, because of the repeating\nproperty, those powers are all numbers that", "start": 740.82, "duration": 4.4}, {"text": "are \u201cp\u201d apart from each other.", "start": 745.22, "duration": 1.51}, {"text": "To recap, we\u2019re trying to find p because\nit will allow us to turn our crappy guess", "start": 746.73, "duration": 4.26}, {"text": "into a good guess for a number that shares\nfactors with N, which will allow us to break", "start": 750.99, "duration": 3.77}, {"text": "the encryption.", "start": 754.76, "duration": 1.0}, {"text": "And we now have a quantum superposition of\nnumbers that repeat periodically with a period", "start": 755.76, "duration": 4.139}, {"text": "of p, or equivalently, they repeat with a\nfrequency of 1/p . If we can find the frequency,", "start": 759.899, "duration": 5.801}, {"text": "we can find p and break the encryption!", "start": 765.7, "duration": 2.08}, {"text": "And the best tool to find the frequencies\nof things is called a Fourier transform.", "start": 767.78, "duration": 5.13}, {"text": "Fourier transforms are what allow you to input\nan audio signal as a wave and convert it into", "start": 772.91, "duration": 4.28}, {"text": "a graph showing the different frequencies\nthat the wave is made up of.", "start": 777.19, "duration": 3.339}, {"text": "And there\u2019s a quantum version of the Fourier\ntransform, which we can apply to our superposition", "start": 780.529, "duration": 4.17}, {"text": "that repeats with a frequency of 1/p to cause\nall the different possible wrong frequencies", "start": 784.699, "duration": 4.741}, {"text": "to destructively interfere, leaving us with\na single quantum state: the number 1/p.", "start": 789.44, "duration": 9.93}, {"text": "So how does the quantum Fourier transform\nperform this magic?", "start": 799.37, "duration": 2.74}, {"text": "Well, if you input a single number into the\nquantum Fourier transform, it will give you", "start": 802.11, "duration": 3.52}, {"text": "a superposition of all other numbers - but\nnot any old superposition.", "start": 805.63, "duration": 4.01}, {"text": "A superposition where the other numbers are\nall weighted by different amounts, and those", "start": 809.64, "duration": 3.48}, {"text": "weights look roughly like a sine wave with\nthe frequency of the single number we put", "start": 813.12, "duration": 3.46}, {"text": "in.", "start": 816.58, "duration": 1.0}, {"text": "If you put in a higher number, you get a sine\nwave-style superposition of all other numbers,", "start": 817.58, "duration": 3.64}, {"text": "but with a higher frequency.", "start": 821.22, "duration": 1.87}, {"text": "And the magic is that when you put IN a superposition\nof numbers, you get out a superposition of", "start": 823.09, "duration": 4.47}, {"text": "superpositions and the sine waves add together\n- or subtract and cancel out.", "start": 827.56, "duration": 4.62}, {"text": "And it happens that if you put in a superposition\nof numbers that are all separated by an amount", "start": 832.18, "duration": 3.61}, {"text": "p, all those sine waves interfere so that\nwhat you get out (and I\u2019m oversimplifying", "start": 835.79, "duration": 3.82}, {"text": "a touch), is the single quantum state representing\n1/p.", "start": 839.61, "duration": 4.02}, {"text": "Which we can finally measure to get the output\nof the computation: 1/p!", "start": 843.63, "duration": 5.569}, {"text": "Which we invert to find p, and as long as\np is even we can now finally raise our guess", "start": 849.199, "duration": 4.841}, {"text": "to the power p over two and add or subtract\none, and as long as we don\u2019t get an exact", "start": 854.04, "duration": 3.799}, {"text": "multiple of N, we are guaranteed to have a\nnumber that shares factors with N. And therefore", "start": 857.839, "duration": 4.871}, {"text": "we can use Euclid\u2019s algorithm to quickly\nfind those factors, and thus we can finally", "start": 862.71, "duration": 4.59}, {"text": "take the encrypted data and decrypt it.", "start": 867.3, "duration": 3.039}, {"text": "And thus we will have broken the encryption.", "start": 870.339, "duration": 1.0}, {"text": "And that is Shor\u2019s algorithm - the lightsaber\nthat can be used to cut through locks on the", "start": 871.339, "duration": 3.521}, {"text": "internet.", "start": 874.86, "duration": 1.0}, {"text": "As complicated as this clearly is in practice...\n(and we've glossed over a ton of details),", "start": 875.86, "duration": 4.14}, {"text": "it\u2019s surprising to me how simple the core\nstructure of Shor's algorithm actually is:", "start": 880.0, "duration": 4.82}, {"text": "for any crappy guess at a number that shares\nfactors with N, that guess to the power p/2", "start": 884.82, "duration": 4.93}, {"text": "plus or minus one is a much much better guess,\nif we can find p.", "start": 889.75, "duration": 4.25}, {"text": "And we CAN find p almost immediately with\na single (if complex) quantum computation.", "start": 894.0, "duration": 5.79}, {"text": "A normal computer would have to go one by\none through all possible powers, which would", "start": 899.79, "duration": 4.47}, {"text": "take an incredible amount of time for any\nreally really big number like the ones used", "start": 904.26, "duration": 4.29}, {"text": "in encryption, since p could be almost any\nnumber up to N. The quantum version is ridiculously", "start": 908.55, "duration": 5.469}, {"text": "ridiculously faster, and if a big enough quantum\ncomputer is ever built, then Shor\u2019s algorithm", "start": 914.019, "duration": 5.32}, {"text": "would allow the user to very easily decrypt\nany data encrypted with a large-number factoring", "start": 919.339, "duration": 4.421}, {"text": "based system - which would pretty much ruin\nthe entire internet.", "start": 923.76, "duration": 3.77}, {"text": "At this point, however, the biggest actual\nquantum implementations of Shor\u2019s algorithm", "start": 927.53, "duration": 4.72}, {"text": "don\u2019t have enough memory to hold more than\na few bits, which only allows factoring of", "start": 932.25, "duration": 3.649}, {"text": "numbers like 15, 21, and 35 . Now, there are\nother methods of factoring using quantum computations", "start": 935.899, "duration": 6.321}, {"text": "that are a bit more advanced, and have factored\nnumbers as big as a few hundred thousand using", "start": 942.22, "duration": 3.97}, {"text": "just a few quantum bits of memory . But they\nwould still need 2000 times more quantum memory", "start": 946.19, "duration": 4.91}, {"text": "to factor even some of the smaller of the\nreally big numbers used in modern encryption", "start": 951.1, "duration": 4.51}, {"text": ". So, no need to worry about quantum computers\njust yet.", "start": 955.61, "duration": 6.14}, {"text": "If all this talk of breaking encryption makes\nyou a bit nervous and worried about your online", "start": 961.75, "duration": 4.27}, {"text": "safety, well, there\u2019s something you can\ndo to improve your internet security right", "start": 966.02, "duration": 3.689}, {"text": "now - I\u2019ve been a long time user of the\npassword manager Dashlane who are sponsoring", "start": 969.709, "duration": 4.06}, {"text": "this video, and if you\u2019ve never used a password\nmanager before, Dashlane is amazing.", "start": 973.769, "duration": 4.43}, {"text": "It generates and remembers a long, unique\npassword for each site or service that I use", "start": 978.199, "duration": 4.01}, {"text": "so that I don\u2019t have to worry about remembering\npasswords; and of course all of my data and", "start": 982.209, "duration": 2.721}, {"text": "passwords are stored encrypted with very very\nlarge numbers.", "start": 984.93, "duration": 3.43}, {"text": "And Dashlane is more than just a password\nmanager - it lets you know when your passwords", "start": 988.36, "duration": 3.169}, {"text": "are old or weak or when a site or app you\nuse has been hacked so you can change your", "start": 991.529, "duration": 3.411}, {"text": "passwords, it encrypts and lets you securely\nshare passwords with family and coworkers,", "start": 994.94, "duration": 4.269}, {"text": "it can be used to securely store or share\nyour address, credit card info, and banking", "start": 999.209, "duration": 3.391}, {"text": "info, with just the people and sites you want\nto, it can be used as a VPN, and more.", "start": 1002.6, "duration": 3.489}, {"text": "Oh, and Dashlane uses 2048 bit numbers for\nits encryption - numbers that big are estimated", "start": 1006.089, "duration": 6.11}, {"text": "to take a trillion times more effort to factor\nthan any that have so far been factored by", "start": 1012.199, "duration": 4.32}, {"text": "brute force.", "start": 1016.519, "duration": 1.0}, {"text": "And of course Dashlane is free for up to 50\npasswords for as long as you like, so you", "start": 1017.519, "duration": 3.981}, {"text": "have nothing to lose checking it out.", "start": 1021.5, "duration": 1.53}, {"text": "But, if you want the very useful features\nof unlimited passwords, encrypted syncing", "start": 1023.03, "duration": 4.04}, {"text": "of passwords, VPN, remote account access,\nand more, the first 200 people get 10% off", "start": 1027.07, "duration": 5.1}, {"text": "Dashlane premium by going to dashlane.com/minutephysics\nand using promo code minutephysics.", "start": 1032.17, "duration": 4.92}, {"text": "Again, that\u2019s dashlane.com/minutephysics\nwith promo code minutephysics to simplify", "start": 1037.09, "duration": 4.13}, {"text": "and encrypt your online life.", "start": 1041.22, "duration": 1.88}, {"text": "Dashlane has legitimately improved my online\nsecurity and changed my password habits for", "start": 1043.1, "duration": 3.92}, {"text": "the better.", "start": 1047.02, "duration": 1.03}, {"text": "What could it do for you?", "start": 1048.05, "duration": 1.09}]