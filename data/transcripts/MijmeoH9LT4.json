[{"text": "UTF-8 is perhaps the best hack,", "start": 0.269, "duration": 4.211}, {"text": "the best single thing that's used", "start": 4.48, "duration": 3.56}, {"text": "that can be written down on the back of a napkin,", "start": 8.04, "duration": 2.14}, {"text": "and that's how was it was put together.", "start": 10.18, "duration": 1.4}, {"text": "The first draft of UTF-8 was written on the back of a napkin in a diner", "start": 11.59, "duration": 4.46}, {"text": "and it's just such an elegant hack", "start": 16.05, "duration": 2.36}, {"text": "that solved so many problems and I\nabsolutely love it.", "start": 18.41, "duration": 2.85}, {"text": "Back in the 1960s,", "start": 23.6, "duration": 1.12}, {"text": "we had teleprinters, we had simple\ndevices where you type a key", "start": 24.73, "duration": 3.5}, {"text": "and it sends some numbers and the same letter comes out on the other side,", "start": 28.23, "duration": 3.27}, {"text": "but there needs to be a standard so in\nthe mid-1960s", "start": 31.5, "duration": 3.149}, {"text": "America, at least, settled on ASCII, which is the American Standard Code for Information Interchange,", "start": 34.649, "duration": 5.58}, {"text": "and it's a 7-bit binary system,", "start": 40.23, "duration": 2.18}, {"text": "so each letter you type in", "start": 42.41, "duration": 1.53}, {"text": "gets converted into 7 binary numbers and sent over the wire.", "start": 43.94, "duration": 4.34}, {"text": "Now that means you can have numbers from 0 to 127.", "start": 48.28, "duration": 4.48}, {"text": "They sort of moved the first 32 for control codes and less important stuff for writing,", "start": 52.76, "duration": 5.58}, {"text": "things like like \"go down a line\" or backspace.", "start": 58.34, "duration": 2.94}, {"text": "And then they made the rest characters. They added some numbers, some punctuation marks.", "start": 61.86, "duration": 4.06}, {"text": "They did a really clever thing, which is that they made 'A' 65 which, in binary\u2014", "start": 65.92, "duration": 6.54}, {"text": "find 1, 2, 4, 8, 16, 32, 64\u2014", "start": 72.46, "duration": 5.54}, {"text": "in binary, 65 is 1000001,", "start": 78.0, "duration": 7.22}, {"text": "which means that 'B' is 66, which means you've got 2 in binary just here.", "start": 85.22, "duration": 6.12}, {"text": "C, 67, 3 in binary.", "start": 91.34, "duration": 3.46}, {"text": "So you can look at a 7-bit binary character and just knock off the first two digits", "start": 94.8, "duration": 5.1}, {"text": "and know what its position in the alphabet is.", "start": 99.9, "duration": 1.86}, {"text": "Even cleverer than that, they started lowercase 32 later,", "start": 101.76, "duration": 4.04}, {"text": "which means that lowercase 'a' is 97\u20141100001.", "start": 105.8, "duration": 6.18}, {"text": "Anything that doesn't fit into that is probably a space, which conveniently will be all zeroes,", "start": 111.98, "duration": 4.58}, {"text": "or some kind of punctuation mark.", "start": 116.56, "duration": 2.04}, {"text": "Brilliant, clever, wonderful, great way of doing things,", "start": 118.6, "duration": 3.3}, {"text": "and that became the standard, at least in the English-speaking world.", "start": 121.9, "duration": 3.7}, {"text": "As for the rest of the world, a few of them did versions of that,", "start": 125.6, "duration": 4.24}, {"text": "but you start getting into other alphabets, into languages that don't really use alphabets at all.", "start": 129.84, "duration": 4.94}, {"text": "They all came up with their own encoding, which is fine.", "start": 134.78, "duration": 3.92}, {"text": "And then along come computers, and, over time, things change.", "start": 138.7, "duration": 3.92}, {"text": "We move to 8-bit computers, so we now have a whole extra number at the start just to confuse matters,", "start": 142.62, "duration": 6.04}, {"text": "which means we can go to 256! We can have twice as many characters!", "start": 148.66, "duration": 4.14}, {"text": "And, of course, everyone settled on the same standard for this, because that would make perfect s\u2014", "start": 152.8, "duration": 5.4}, {"text": "No. None of them did.", "start": 158.2, "duration": 0.86}, {"text": "All the Nordic countries start putting Norwegian characters and Finnish characters in there.", "start": 159.06, "duration": 4.02}, {"text": "Japan just doesn't use ASCII at all.", "start": 163.08, "duration": 3.6}, {"text": "Japan goes and creates its own multibyte encoding with more letters and more characters", "start": 166.68, "duration": 5.22}, {"text": "and more binary numbers going to each individual character.", "start": 171.9, "duration": 2.54}, {"text": "All of these things are massively incompatible.", "start": 174.44, "duration": 3.2}, {"text": "Japan actually has three or four different encodings, all of which are completely incompatible with each other.", "start": 177.64, "duration": 7.04}, {"text": "So you send a document from one old-school Japanese computer to another,", "start": 184.68, "duration": 4.02}, {"text": "it will come out so garbled that there is even a word in Japanese for \"garbled characters,\"", "start": 188.7, "duration": 5.4}, {"text": "which is\u2014I'm probably mispronouncing this\u2014but it's \"mojibake.\"", "start": 194.1, "duration": 3.5}, {"text": "It's a bit of a nightmare, but it's not bad,", "start": 197.6, "duration": 1.78}, {"text": "because how often does someone in London have to send a document", "start": 199.38, "duration": 3.96}, {"text": "to a completely incompatible and unknown computer at another company in Japan?", "start": 203.34, "duration": 4.32}, {"text": "In those days, it's rare. You printed it off and you faxed it.", "start": 207.66, "duration": 3.3}, {"text": "And then the World Wide Web hit, and we have a problem,", "start": 210.96, "duration": 5.34}, {"text": "because suddenly documents are being sent from all around the world all the time.", "start": 216.3, "duration": 4.84}, {"text": "So a thing is set up called the Unicode Consortium.", "start": 221.14, "duration": 3.14}, {"text": "In what I can only describe as a miracle, over the last couple of decades, they have hammered out a standard.", "start": 224.28, "duration": 8.96}, {"text": "Unicode now have a list of more than a hundred thousand characters", "start": 233.24, "duration": 5.42}, {"text": "that covers everything you could possibly want to write in any language\u2014", "start": 238.66, "duration": 3.8}, {"text": "English alphabet, Cyrillic alphabet, Arabic alphabet, Japanese, Chinese, and Korean characters.", "start": 242.46, "duration": 7.72}, {"text": "What you have at the end is the Unicode Consortium assigning 100,000+ characters to 100,000 numbers.", "start": 250.18, "duration": 7.62}, {"text": "They have not chosen binary digits. They have not chosen what they should be represented as.", "start": 257.8, "duration": 4.54}, {"text": "All they have said is that THAT Arabic character there, that is number 5,700-something,", "start": 262.34, "duration": 6.36}, {"text": "and this linguistic symbol here, that's 10,000-something.", "start": 268.7, "duration": 4.14}, {"text": "I have to simplify massively here because there are about,", "start": 272.84, "duration": 2.62}, {"text": "of course, five or six incompatible ways to do this,", "start": 275.46, "duration": 3.36}, {"text": "but what the web has more or less settled on is something called \"UTF-8.\"", "start": 278.82, "duration": 4.54}, {"text": "There are a couple of problems with doing the obvious thing, which is saying,", "start": 283.36, "duration": 4.24}, {"text": "\"OK. We're going to 100,000.", "start": 287.6, "duration": 2.48}, {"text": "That's gonna need, what... to be safe, that's gonna need 32 binary digits to encode it.\"", "start": 290.08, "duration": 6.3}, {"text": "They encoded the English alphabet in exactly the same way as ASCII did. 'A' is still 65.", "start": 296.38, "duration": 7.14}, {"text": "So if you have just a string of English text, and you're encoding it at 32 bits per character,", "start": 303.52, "duration": 6.22}, {"text": "you're gonna have about 20-something... 26? Yeah.", "start": 309.74, "duration": 5.46}, {"text": "26, 27 zeroes and then a few ones for every single character.", "start": 315.2, "duration": 5.48}, {"text": "That is incredibly wasteful.", "start": 320.68, "duration": 1.6}, {"text": "Suddenly every English language text file takes four times the space on disk.", "start": 322.28, "duration": 5.02}, {"text": "So problem 1: you have to get rid of all the zeroes in the English text.", "start": 327.3, "duration": 3.26}, {"text": "Problem 2: there are lots of old computer systems that interpret 8 zeroes in a row,", "start": 330.56, "duration": 6.7}, {"text": "a NULL, as \"this is the end of the string of characters.\"", "start": 337.26, "duration": 3.36}, {"text": "so if you ever send 8 zeroes in a row, they just stop listening.", "start": 340.62, "duration": 4.62}, {"text": "They assume the string has ended there, and it gets cut off,", "start": 345.24, "duration": 2.78}, {"text": "so you can't have 8 zeroes in a row anywhere.", "start": 348.02, "duration": 3.7}, {"text": "'K. Problem number 3: it has to be backwards-compatible.", "start": 351.72, "duration": 4.72}, {"text": "You have to be able to take this Unicode text and chuck it into something that only understands basic ASCII,", "start": 356.44, "duration": 7.36}, {"text": "and have it more or less work for English text.", "start": 363.8, "duration": 2.86}, {"text": "UTF-8 solves all of these problems and it's just a wonderful hack.", "start": 366.66, "duration": 5.44}, {"text": "It starts by just taking ASCII.", "start": 372.1, "duration": 2.86}, {"text": "If you have something under 128, that can just be expressed as 7 digits,", "start": 374.96, "duration": 5.84}, {"text": "you put down a zero, and then you put the same numbers that you would otherwise,", "start": 380.8, "duration": 4.66}, {"text": "so let's have that 'A' again\u2014there we go!", "start": 385.46, "duration": 4.36}, {"text": "That's still 'A.' That's still 65. That's still UTF-8-valid, and that's still ASCII-valid. Brilliant.", "start": 389.82, "duration": 5.56}, {"text": "OK. Now let's say we're going above that.", "start": 395.38, "duration": 2.72}, {"text": "Now you need something that's gonna work more or less for ASCII, or at least not break things,", "start": 398.1, "duration": 5.18}, {"text": "but still be understood.", "start": 403.28, "duration": 1.3}, {"text": "So what you do is you start by writing down \"110.\"", "start": 404.58, "duration": 4.6}, {"text": "This means this is the start of a new character, and this character is going to be 2 bytes long.", "start": 409.18, "duration": 5.38}, {"text": "Two ones, two bytes, a byte being 8 characters.", "start": 414.56, "duration": 2.8}, {"text": "And you say on this one, we're gonna start it with \"10,\" which means this is a continuation,", "start": 417.36, "duration": 4.02}, {"text": "and at all these blank spaces, of which you have 5 here and 6 here,", "start": 421.38, "duration": 4.14}, {"text": "you fill in the other numbers,", "start": 425.52, "duration": 2.4}, {"text": "and then when you calculate it, you just take off those headers,", "start": 427.92, "duration": 3.14}, {"text": "and it understands just  as being whatever number that turns out to be.", "start": 431.06, "duration": 4.22}, {"text": "That's probably somewhere in the hundreds.", "start": 435.28, "duration": 2.6}, {"text": "That'll do you for the first 4,096. What about above that?", "start": 437.88, "duration": 4.34}, {"text": "Well, above that you go \"1110,\" meaning there are three bytes in this\u2014three ones, three bytes\u2014", "start": 442.22, "duration": 6.42}, {"text": "with two continuation bytes.", "start": 448.64, "duration": 1.86}, {"text": "So now you have 1, 2, 3, 4, 10, 16 spaces.", "start": 450.5, "duration": 4.74}, {"text": "You want to go above that? You can.", "start": 455.24, "duration": 1.32}, {"text": "This specification goes all the way to \"1111110x\" with this many continuation bytes after it.", "start": 456.56, "duration": 9.46}, {"text": "It's a neat hack that you can explain on the back of a napkin or a bit of paper.", "start": 466.02, "duration": 3.98}, {"text": "It's backwards-compatible. It avoids waste. At no point will it ever, ever, ever send 8 zeroes in a row,", "start": 470.0, "duration": 7.42}, {"text": "and, really, really crucially, the one that made it win over every other system", "start": 477.42, "duration": 4.54}, {"text": "is that you can move backwards and forwards really easily.", "start": 481.96, "duration": 3.56}, {"text": "You do not have to have an index of where the character starts.", "start": 485.52, "duration": 2.66}, {"text": "If you are halfway through a string and you wanna go back one character,", "start": 488.18, "duration": 4.34}, {"text": "you just look for the previous header.", "start": 492.52, "duration": 2.42}, {"text": "And that's it, and that works,", "start": 494.94, "duration": 1.12}, {"text": "and, as of a few years ago, UTF-8 beat out ASCII and everything else as, for the first time,", "start": 496.06, "duration": 6.36}, {"text": "the dominant character encoding on the web.", "start": 502.42, "duration": 2.72}, {"text": "We don't have that mojibake that Japanese has.", "start": 505.14, "duration": 3.76}, {"text": "We have something that nearly works, and that is why it's the most beautiful hack that I can think of", "start": 508.9, "duration": 6.1}, {"text": "that is used around the world every second of every day.", "start": 515.0, "duration": 3.0}, {"text": "(BRADY HARAN)\n-We'd like to think Audible.com for their support of this Computerphile video,", "start": 520.84, "duration": 4.34}, {"text": "and, if you register with Audible and go to audible.com/computerphile,", "start": 525.18, "duration": 4.7}, {"text": "you can download a free audiobook.", "start": 529.88, "duration": 2.76}, {"text": "They've got a huge range of books at Audible. I'd like to recommend \"The Last Man On the Moon,\"", "start": 532.64, "duration": 5.56}, {"text": "which is by Eugene Cernan who is the eleventh of twelve men to step onto the Moon.", "start": 538.2, "duration": 6.54}, {"text": "but he was the last man to step off the Moon,", "start": 544.74, "duration": 2.26}, {"text": "so I'm not sure whether or not he is \"the last man on the Moon\" or not.", "start": 547.0, "duration": 3.56}, {"text": "Sort of depends how you define it.", "start": 550.56, "duration": 1.94}, {"text": "But his book is really good, and what I really like about it is it's read by Cernan himself,", "start": 552.5, "duration": 5.16}, {"text": "which I think is pretty cool", "start": 557.66, "duration": 1.1}, {"text": "Again, thanks to Audible. Go to audible.com/computerphile", "start": 558.76, "duration": 4.96}, {"text": "and get a free audiobook.", "start": 563.72, "duration": 1.38}, {"text": "(TOM SCOTT)\n-\"... an old system that hasn't been programmed well will take those nice curly quotes", "start": 565.1, "duration": 4.66}, {"text": "that Microsoft Word has put into Unicode, and it will look at that and say,", "start": 569.76, "duration": 3.8}, {"text": "'That is three separate characters...' \"", "start": 573.56, "duration": 3.08}]